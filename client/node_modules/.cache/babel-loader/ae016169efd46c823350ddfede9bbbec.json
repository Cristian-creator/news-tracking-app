{"ast":null,"code":"import { GET_USER, DECODE_THE_JWT, DISCONNECT } from './user-types';\nimport Axios from 'axios';\nexport const getUser = (id, newData) => async dispatch => {\n  let userId = id;\n  let userData = newData;\n\n  try {\n    if (userId) {\n      const {\n        data\n      } = await Axios.get(`/users/user-data/${userId}`);\n      return dispatch({\n        type: GET_USER,\n        payload: data.user\n      });\n    } else if (newData) {\n      return dispatch({\n        type: GET_USER,\n        payload: userData\n      });\n    }\n  } catch (error) {}\n};\nexport const decodeTheJWT = token => async dispatch => {\n  let base64Url = token.split('.')[1];\n  let base64 = base64Url.replace('-', '+').replace('_', '/');\n  let decodedData = JSON.parse(Buffer.from(base64, 'base64').toString('binary')); // console.log(decodedData);\n\n  return dispatch({\n    type: DECODE_THE_JWT,\n    payload: decodedData\n  });\n};\nexport const disconnect = async dispatch => {\n  return dispatch({\n    type: DISCONNECT\n  });\n};","map":{"version":3,"sources":["/home/cristian/Documents/attemps-postbac/news-app/client/src/store/actions/user/user-actions.js"],"names":["GET_USER","DECODE_THE_JWT","DISCONNECT","Axios","getUser","id","newData","dispatch","userId","userData","data","get","type","payload","user","error","decodeTheJWT","token","base64Url","split","base64","replace","decodedData","JSON","parse","Buffer","from","toString","disconnect"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,cAAnB,EAAmCC,UAAnC,QAAqD,cAArD;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,EAAD,EAAKC,OAAL,KAAiB,MAAOC,QAAP,IAAoB;AACxD,MAAIC,MAAM,GAAGH,EAAb;AACA,MAAII,QAAQ,GAAGH,OAAf;;AACA,MAAI;AACA,QAAGE,MAAH,EAAW;AACP,YAAM;AAAEE,QAAAA;AAAF,UAAW,MAAMP,KAAK,CAACQ,GAAN,CAAW,oBAAmBH,MAAO,EAArC,CAAvB;AACA,aAAOD,QAAQ,CAAC;AACZK,QAAAA,IAAI,EAAEZ,QADM;AAEZa,QAAAA,OAAO,EAAEH,IAAI,CAACI;AAFF,OAAD,CAAf;AAIH,KAND,MAMO,IAAIR,OAAJ,EAAa;AAChB,aAAOC,QAAQ,CAAC;AACZK,QAAAA,IAAI,EAAEZ,QADM;AAEZa,QAAAA,OAAO,EAAEJ;AAFG,OAAD,CAAf;AAIH;AAEJ,GAdD,CAcE,OAAOM,KAAP,EAAc,CAEf;AACJ,CApBM;AAsBP,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW,MAAOV,QAAP,IAAoB;AACvD,MAAIW,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAhB;AACA,MAAIC,MAAM,GAAGF,SAAS,CAACG,OAAV,CAAkB,GAAlB,EAAuB,GAAvB,EAA4BA,OAA5B,CAAoC,GAApC,EAAyC,GAAzC,CAAb;AACA,MAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,IAAP,CAAYN,MAAZ,EAAoB,QAApB,EAA8BO,QAA9B,CAAuC,QAAvC,CAAX,CAAlB,CAHuD,CAIvD;;AACA,SAAOpB,QAAQ,CAAC;AACZK,IAAAA,IAAI,EAAEX,cADM;AAEZY,IAAAA,OAAO,EAAES;AAFG,GAAD,CAAf;AAIH,CATM;AAWP,OAAO,MAAMM,UAAU,GAAG,MAAOrB,QAAP,IAAoB;AAC1C,SAAOA,QAAQ,CAAC;AACZK,IAAAA,IAAI,EAAEV;AADM,GAAD,CAAf;AAGH,CAJM","sourcesContent":["import { GET_USER, DECODE_THE_JWT, DISCONNECT } from './user-types';\n\nimport Axios from 'axios';\n\nexport const getUser = (id, newData) => async (dispatch) => {\n    let userId = id;\n    let userData = newData;\n    try {\n        if(userId) {\n            const { data } = await Axios.get(`/users/user-data/${userId}`);\n            return dispatch({\n                type: GET_USER,\n                payload: data.user\n            });\n        } else if (newData) {\n            return dispatch({\n                type: GET_USER,\n                payload: userData\n            });\n        }\n\n    } catch (error) {\n        \n    }\n}\n\nexport const decodeTheJWT = (token) => async (dispatch) => {\n    let base64Url = token.split('.')[1];\n    let base64 = base64Url.replace('-', '+').replace('_', '/');\n    let decodedData = JSON.parse(Buffer.from(base64, 'base64').toString('binary'));\n    // console.log(decodedData);\n    return dispatch({\n        type: DECODE_THE_JWT,\n        payload: decodedData\n    })\n}\n\nexport const disconnect = async (dispatch) => {\n    return dispatch({\n        type: DISCONNECT\n    })\n}"]},"metadata":{},"sourceType":"module"}