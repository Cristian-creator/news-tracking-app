{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/attemps-postbac/news-app/client/src/components/register-login/register/Register.js\";\nimport React, { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nexport default function Register() {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    clearErrors,\n    setError\n  } = useForm();\n\n  const onSubmit = data => {\n    const first = getValues(\"password\");\n    const second = getValues(\"password2\");\n    if (first !== second) setError(\"password2\", {\n      type: \"manual\",\n      message: \"Passwords dont match.\"\n    });\n    console.log(data);\n  };\n\n  const [pass, setPass] = useState('');\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"firstName\",\n    ref: register({\n      required: {\n        value: true,\n        message: \"This field is required.\"\n      },\n      minLength: {\n        value: 3,\n        message: \"Minimum of characters is 3.\"\n      },\n      maxLength: {\n        value: 50,\n        message: \"Maximum of characters is 50.\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }), errors.firstName && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 38\n    }\n  }, \" This field is required \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"secondName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Second Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"secondName\",\n    ref: register({\n      required: {\n        value: true,\n        message: \"This field is required.\"\n      },\n      minLength: {\n        value: 3,\n        message: \"Minimum of characters is 3.\"\n      },\n      maxLength: {\n        value: 50,\n        message: \"Maximum of characters is 50.\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), errors.secondName && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 39\n    }\n  }, \" This field is required \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    tyoe: \"email\",\n    ref: register({\n      required: {\n        value: true,\n        message: 'This field is required.'\n      },\n      pattern: {\n        value: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n        message: 'Enter a valid email.'\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }), errors.email && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 34\n    }\n  }, \" \", errors.email.message, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"password\",\n    type: \"password\",\n    ref: register({\n      required: {\n        value: true,\n        message: \"This field is required.\"\n      },\n      minLength: {\n        value: 5,\n        message: \"Enter a password of at least 5 characters.\"\n      },\n      maxLength: {\n        value: 30,\n        message: \"Enter a password of up to 30 characters.\"\n      }\n    }),\n    onChange: e => setPass(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 37\n    }\n  }, \" \", errors.password.message, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"Repeat password\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"password2\",\n    type: \"password\",\n    ref: register({\n      required: {\n        value: true,\n        message: \"This field is required.\"\n      },\n      minLength: {\n        value: 5,\n        message: \"Enter a password of at least 5 characters.\"\n      },\n      maxLength: {\n        value: 30,\n        message: \"Enter a password of up to 30 characters.\"\n      }\n    }),\n    onChange: e => {\n      const value = e.target.value;\n      if (value === pass) return clearErrors('password2'); // setError('password2', 'notMatch', 'Passwords dont match.')\n\n      setError(\"password2\", {\n        type: \"manual\",\n        message: \"Passwords dont match.\"\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }), errors.password2 && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 38\n    }\n  }, \" \", errors.password2.message, \" \")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/cristian/Documents/attemps-postbac/news-app/client/src/components/register-login/register/Register.js"],"names":["React","useState","useForm","Register","register","handleSubmit","errors","clearErrors","setError","onSubmit","data","first","getValues","second","type","message","console","log","pass","setPass","required","value","minLength","maxLength","firstName","secondName","pattern","email","e","target","password","password2"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useForm } from \"react-hook-form\";\n\nexport default function Register() {\n\n  const { register, handleSubmit, errors, clearErrors, setError } = useForm();\n  const onSubmit = data => {\n    const first = getValues(\"password\");\n    const second = getValues(\"password2\");\n    if(first !== second) setError(\"password2\", {\n        type: \"manual\",\n        message: \"Passwords dont match.\"\n      });\n    console.log(data);\n  }\n\n  const [pass, setPass] = useState('');\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"\">\n                <label htmlFor=\"firstName\">First Name</label>\n                <input name=\"firstName\" ref={register({\n                    required: {\n                        value: true,\n                        message: \"This field is required.\"\n                    },\n                    minLength: {\n                        value: 3,\n                        message: \"Minimum of characters is 3.\",\n                    },\n                    maxLength: {\n                        value: 50,\n                        message: \"Maximum of characters is 50.\"    \n                    }\n                })} />\n                {errors.firstName && <span> This field is required </span>}\n            </div>\n\n            <div className=\"\">\n                <label htmlFor=\"secondName\">Second Name</label>\n                <input name=\"secondName\" ref={register({\n                    required: {\n                        value: true,\n                        message: \"This field is required.\"\n                    },\n                    minLength: {\n                        value: 3,\n                        message: \"Minimum of characters is 3.\",\n                    },\n                    maxLength: {\n                        value: 50,\n                        message: \"Maximum of characters is 50.\"    \n                    }\n                })} />\n                {errors.secondName && <span> This field is required </span>}\n            </div>\n\n            <div className=\"\">\n                <label htmlFor=\"email\">Email</label>\n                <input name=\"email\" tyoe=\"email\" ref={register({\n                    required: {\n                        value: true,\n                        message: 'This field is required.'\n                    },\n                    pattern: {\n                        value: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/ ,\n                        message: 'Enter a valid email.'\n                    }\n                })} />\n                {errors.email && <span> {errors.email.message} </span>}\n            </div>\n\n            <div className=\"\">\n                <label htmlFor=\"password\">Password</label>\n                <input name=\"password\" type=\"password\" ref={register({\n                    required: {\n                        value: true,\n                        message: \"This field is required.\"\n                    },\n                    minLength: {\n                        value: 5,\n                        message: \"Enter a password of at least 5 characters.\",\n                    },\n                    maxLength: {\n                        value: 30,\n                        message: \"Enter a password of up to 30 characters.\"    \n                    }\n                })}\n                onChange={(e) => setPass(e.target.value)}\n                />\n                {errors.password && <span> {errors.password.message} </span>}\n            </div>\n\n            <div className=\"\">\n                <label htmlFor=\"password2\">Repeat password</label>\n                <input name=\"password2\" type=\"password\" ref={register({\n                    required: {\n                        value: true,\n                        message: \"This field is required.\"\n                    },\n                    minLength: {\n                        value: 5,\n                        message: \"Enter a password of at least 5 characters.\",\n                    },\n                    maxLength: {\n                        value: 30,\n                        message: \"Enter a password of up to 30 characters.\"    \n                    }\n                })}\n                onChange={(e) => {\n                    const value = e.target.value;\n                    if(value === pass) return clearErrors('password2');\n                    // setError('password2', 'notMatch', 'Passwords dont match.')\n                    setError(\"password2\", {\n                        type: \"manual\",\n                        message: \"Passwords dont match.\"\n                      });\n                }}\n                />\n                {errors.password2 && <span> {errors.password2.message} </span>}\n            </div>\n            \n            \n            <input type=\"submit\" />\n        </form>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}